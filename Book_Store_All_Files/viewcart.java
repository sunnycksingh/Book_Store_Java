/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package book_project_core_java;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ADMIN
 */
public class viewcart extends javax.swing.JFrame {

    /**
     * Creates new form viewcart
     */
    public viewcart() {
        initComponents();
        DefaultTableModel m =(DefaultTableModel) jTable1.getModel();
        
    }
    int id;
    String name;
public viewcart(int id, String name)  {
    initComponents();
       setTime();
        this.id = id;
        this.name = name;
        showCart(id);
        
        DefaultTableModel m =(DefaultTableModel) jTable1.getModel();
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        timelabel = new javax.swing.JLabel();
        jdate = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        text = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        total = new javax.swing.JLabel();
        back = new javax.swing.JButton();
        exit = new javax.swing.JButton();
        checkout = new javax.swing.JButton();
        clearcart = new javax.swing.JButton();
        deleteitem = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 0));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/background/viewcart icon.jpg"))); // NOI18N
        jLabel1.setText(" View-Cart");

        timelabel.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N

        jdate.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N

        text.setColumns(20);
        text.setRows(5);
        jScrollPane1.setViewportView(text);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(timelabel, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(86, 86, 86)
                .addComponent(jdate, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jdate, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(timelabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel1))
                .addGap(28, 28, 28))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );

        jPanel2.setBackground(new java.awt.Color(255, 51, 153));

        jTable1.setBackground(new java.awt.Color(153, 255, 153));
        jTable1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jTable1.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Quantity", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable1);

        total.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        total.setText("Total:");
        total.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        back.setBackground(new java.awt.Color(51, 255, 255));
        back.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        back.setText("Back");
        back.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        exit.setBackground(new java.awt.Color(255, 102, 255));
        exit.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        exit.setText("Exit");
        exit.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        checkout.setBackground(new java.awt.Color(102, 255, 102));
        checkout.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        checkout.setText("Check-Out");
        checkout.setToolTipText("");
        checkout.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        checkout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkoutActionPerformed(evt);
            }
        });

        clearcart.setBackground(new java.awt.Color(255, 204, 102));
        clearcart.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        clearcart.setText("Clear-Cart");
        clearcart.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        clearcart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearcartActionPerformed(evt);
            }
        });

        deleteitem.setBackground(new java.awt.Color(255, 0, 0));
        deleteitem.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        deleteitem.setText("Delete-Item");
        deleteitem.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        deleteitem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteitemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(154, 154, 154)
                .addComponent(deleteitem, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(98, 98, 98)
                .addComponent(clearcart, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(91, 91, 91)
                .addComponent(checkout, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69)
                .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(139, 139, 139)
                .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 107, Short.MAX_VALUE)
                .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(205, 205, 205))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(255, 255, 255)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkout, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearcart, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteitem, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(105, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exitActionPerformed

    private void checkoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkoutActionPerformed
 DefaultTableModel m =(DefaultTableModel) jTable1.getModel();
       
          try{
              int orderid = 1;
              int sum = 0,price=0;
              String bname="";
              text.setText( "************************Book Store**************************\n"
                             +"Time: "+timelabel.getText()+"\t"+ "Date : "+jdate.getText()+"\n" 
                             +"Customer Name : "+name+"\n"
                              +"Item Name :\t\t\t"+"Price(Rs)\n");
              
               Class.forName("com.mysql.jdbc.Driver");
               Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/bookstore","root","Sunny@123");
              
             Statement st = connection.createStatement();
              String query2="select * from orders where orderid =(select max(orderid) from orders where id = '"+id+"' and checkout is null)";
              ResultSet rs = st.executeQuery(query2);
               while (rs.next()) 
               {
                    orderid = rs.getInt("orderid");
                    bname = rs.getString("name");
                    price = rs.getInt("price");
                    sum+=price;
                   text.setText(text.getText()+""+bname+"\t"+"\t\t"+price+"\n");
              }
               PreparedStatement ps = connection.prepareStatement("update orders set checkout = 'yes' where orderid = '"+orderid+"'");
               int i = ps.executeUpdate();
               if (i>0) 
               {
                   JOptionPane.showMessageDialog(this, "Order Placed Succdesfully!!");
                  
                   m.setRowCount(0);
                   total.setText("Total: "+0);
             text.setText(text.getText()+"___________________"+"Total: "+sum+"_________________"+"\n");
              text.print();
                    
              }
                                      
               
          }catch (Exception ex) {
                Logger.getLogger(RegisterPage.class.getName()).log(Level.SEVERE, null, ex);
            }        // TODO add your handling code here:
    }//GEN-LAST:event_checkoutActionPerformed

    private void deleteitemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteitemActionPerformed
        // TODO add your handling code here:
          DefaultTableModel m =(DefaultTableModel) jTable1.getModel();
        if (jTable1.getSelectedRowCount() == 1) 
        {
           
            
             try{
              int orderid = 0,sum = 0;
               Class.forName("com.mysql.jdbc.Driver");
               Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/bookstore","root","Sunny@123");
              
             Statement st = connection.createStatement();
              String query2="select orderid  from orders where orderid =(select max(orderid) from orders where id = '"+id+"' and checkout is null)";
              ResultSet rs = st.executeQuery(query2);
               if (rs.next()) 
               {
                    orderid = rs.getInt(1);
                   
                  
              }
               String value = (String)jTable1.getValueAt(jTable1.getSelectedRow(), 0);
               PreparedStatement ps = connection.prepareStatement("delete from orders where orderid = '"+orderid+"'and name = '"+value+"'");
               int i = ps.executeUpdate();
                 if (i>0)
                 {
                     m.removeRow(jTable1.getSelectedRow());
                    
                 }
                String query = "select sum(price) from orders where orderid = (select max(orderid) from orders where id = '"+id+"' and checkout is null) ";
             rs = st.executeQuery(query);
             while (rs.next())
             {
                 sum = rs.getInt(1);
             }
             total.setText("Total: "+ sum);
                    
        } catch (Exception e) {
             System.out.println(e);
        }
        }
         else
        {
            if (jTable1.getRowCount() == 0) 
            {
                JOptionPane.showMessageDialog(this, "Cart is Empty");
                
            }
            else
            {
                JOptionPane.showMessageDialog(this,"Please Select Single Item");
            }
 
        }
            
    }//GEN-LAST:event_deleteitemActionPerformed

    private void clearcartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearcartActionPerformed
        // TODO add your handling code here:
           DefaultTableModel m =(DefaultTableModel) jTable1.getModel();
          try{
              int orderid = 1;
               Class.forName("com.mysql.jdbc.Driver");
               Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/bookstore","root","Sunny@123");
              
             Statement st = connection.createStatement();
              String query2="select orderid  from orders where orderid =(select max(orderid) from orders where id = '"+id+"' and checkout is null)";
              ResultSet rs = st.executeQuery(query2);
               if (rs.next()) 
               {
                    orderid = rs.getInt(1);
                   
                  
              }
               
               PreparedStatement ps = connection.prepareStatement("delete from orders where orderid = '"+orderid+"'");
               int i = ps.executeUpdate();
                 if (i>0)
                 {
                     JOptionPane.showMessageDialog(this, "Cart Cleared!!");
                     m.setRowCount(0);
                     total.setText("Total: "+"0");
                     
                     
                 }
                               
        } catch (Exception e) {
             System.out.println(e);
        }
                                            

    }//GEN-LAST:event_clearcartActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
         this.toBack();
        bookmain bk = new bookmain(id,name);
        bk.setVisible(true);
        bk.toFront();
    }//GEN-LAST:event_backActionPerformed

    public void showCart(int id)
    {
         DefaultTableModel m =(DefaultTableModel) jTable1.getModel();
         try {
             int sum = 0;
              Class.forName("com.mysql.jdbc.Driver");
              Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/bookstore","root","Sunny@123");
              Statement st = connection.createStatement();
              String query2="select *  from orders where orderid =(select max(orderid) from orders where id = '"+id+"' and checkout is null)";
              ResultSet rs = st.executeQuery(query2);
              while (rs.next())
              {
                  String name = rs.getString("name");
                  String quantity = String.valueOf(rs.getInt("quantity"));
                  String price = String.valueOf(rs.getInt("price"));
                  
                  String data [] = {name,quantity,price};
                  m = (DefaultTableModel) jTable1.getModel();
                  m.addRow(data);
                  
              }
              
              String query = "select sum(price) from orders where orderid = (select max(orderid) from orders where id = '"+id+"' and checkout is null) ";
             rs = st.executeQuery(query);
             while (rs.next())
             {
                 sum = rs.getInt(1);
             }
             total.setText("Total: "+ sum);
        } catch (Exception e) {
             System.out.println(e);
        }
    }
    
    
     public void setTime()
     {
         new Thread(new Runnable() {
             @Override
             public void run() {
                 while (true)
                 {
                     try {
                         Thread.sleep(1000);
                     } catch (InterruptedException ex) {
                         Logger.getLogger(horror2.class.getName()).log(Level.SEVERE, null, ex);
                     }
                     
                     Date date = new Date();
                     SimpleDateFormat tf = new SimpleDateFormat("h:mm:ss aa");
                     SimpleDateFormat df = new SimpleDateFormat("EEEE, dd-MM-yyyy");
                     String time  = tf.format(date);
                     timelabel.setText(time.split(" ")[0]+" "+time.split(" ")[1]);
                     jdate.setText(df.format(date));
                     
                 }
             }
         }).start();
     }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(viewcart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(viewcart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(viewcart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(viewcart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new viewcart().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JButton checkout;
    private javax.swing.JButton clearcart;
    private javax.swing.JButton deleteitem;
    private javax.swing.JButton exit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel jdate;
    private javax.swing.JTextArea text;
    private javax.swing.JLabel timelabel;
    private javax.swing.JLabel total;
    // End of variables declaration//GEN-END:variables
}
